-- Generated by Oracle SQL Developer Data Modeler 20.4.1.406.0906
--   at:        2021-05-27 15:24:17 CEST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



CREATE USER bd2c008_app IDENTIFIED BY account ;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE lekarze (
    id_lekarza      NUMBER(5) CONSTRAINT id_lekarza_nn NOT NULL,
    imie            VARCHAR2(20 CHAR) CONSTRAINT imie_lekarza_nn NOT NULL,
    nazwisko        VARCHAR2(25 CHAR) CONSTRAINT nazwisko_lekarza_nn NOT NULL,
    numer_umowy     VARCHAR2(30 CHAR) CONSTRAINT nr_umowy_nn NOT NULL,
    numer_telefonu  VARCHAR2(16 CHAR),
    imie_2          VARCHAR2(20 CHAR),
    specjalizacja   VARCHAR2(40 CHAR),
    uwagi           VARCHAR2(4000 CHAR)
)
LOGGING;

COMMENT ON TABLE lekarze IS
    'Lekarz, ktory moze wypisac recepte.';

COMMENT ON COLUMN lekarze.numer_telefonu IS
    'Numer telefonu lekarza. Zastosowalem typ danych znakowych o zmiennej dlugosci, poniewaz najkrotsze numery telefonow na Swiecie maja dlugosc 4, natomiast najdluzsze 12. Ponadto uwzgledniajac prefix skladajacy sie ze znaku "+" oraz kodu krajowego, najdluzszy numer telefonu zawierac moze 16 znakow.';

COMMENT ON COLUMN lekarze.specjalizacja IS
    'Specjalizacja lekarska danego lekarza (np.: ortopedia).';

GRANT SELECT, INSERT, UPDATE, DELETE ON lekarze TO bd2c008_app;

ALTER TABLE lekarze ADD CONSTRAINT lekarz_pk PRIMARY KEY ( id_lekarza );

ALTER TABLE lekarze ADD CONSTRAINT lekarz_nr_tel_uk UNIQUE ( numer_telefonu );

ALTER TABLE lekarze ADD CONSTRAINT lekarz_nr_um_uk UNIQUE ( numer_umowy );

CREATE TABLE leki_refundowane (
    id_leku_refundowanego     NUMBER(5) CONSTRAINT id_leku_nn NOT NULL,
    nazwa                     VARCHAR2(25 CHAR) CONSTRAINT nazwa_nn NOT NULL,
    nazwa_substancji_czynnej  VARCHAR2(60 CHAR) CONSTRAINT nazwa_subst_czynn_nn NOT NULL,
    moc                       VARCHAR2(20 CHAR) CONSTRAINT moc_nn NOT NULL,
    postac                    VARCHAR2(15 CHAR) CONSTRAINT postac_nn NOT NULL,
    sposob_podania            VARCHAR2(20 CHAR),
    opis                      VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE leki_refundowane
    ADD CONSTRAINT check_valid_postac
    CHECK ( postac IN ( 'czopek', 'drazetka', 'emulsja', 'granulat', 'kapsulka',
                            'krem', 'masc', 'pasta', 'proszek', 'roztwor',
                            'syrop',
                            'tabletka',
                            'zawiesina',
                            'zel' ) );

COMMENT ON TABLE leki_refundowane IS
    'Lek refundowany, ktory nie jest jeszcze umieszczony w opakowaniu. Zawiera atrybuty dotyczace leku jako konkretnej substancji leczniczej.';

COMMENT ON COLUMN leki_refundowane.nazwa IS
    'Nazwa wlasna preparatu.';

COMMENT ON COLUMN leki_refundowane.nazwa_substancji_czynnej IS
    'Nazwa powszechnie stosowana, w jezyku lacinskim, substancji czynnej zawartej w leku. Jesli lek zawiera wiecej niz jedna substancje czynna, wymienia sie nazwy powszechnie stosowane wszystkich z nich, oddzielone od siebie znakiem "+".';

COMMENT ON COLUMN leki_refundowane.moc IS
    'Zawartosc substancji czynnej w jednostce leku. Jednostka leku zalezy od jego postaci (np.: jednostka leku w postaci tabletek to jedna tabletka). Jesli lek zawiera wiecej niz jedna substancje czynna, wymienia sie dawki wszystkich z nich, oddzielone od siebie znakiem "+". Dawki podawane sa w ogolnie przyjetych dla produktow leczniczych jednostkach (np.: mg, g, ml) lub w jednostkach okreslajacych ilosc lub aktywnosc biologiczna substancji czynnej (np.: IU - International Unit).';

COMMENT ON COLUMN leki_refundowane.postac IS
    'Postac farmaceutyczna leku. Mozliwe postacie to: ''czopek'', ''drazetka'', ''emulsja'',''granulat'', ''kapsulka'', ''krem'', ''masc'', ''pasta'', ''proszek'', ''roztwor'', ''syrop'', ''tabletka'', ''zawiesina'', ''zel''.';

COMMENT ON COLUMN leki_refundowane.sposob_podania IS
    'Sposob podania leku (np.: doustnie, na skore).';

COMMENT ON COLUMN leki_refundowane.opis IS
    'Opcjonalne dodatkowe informacje o leku.';

GRANT SELECT, INSERT, UPDATE, DELETE ON leki_refundowane TO bd2c008_app;

ALTER TABLE leki_refundowane ADD CONSTRAINT lek_pk PRIMARY KEY ( id_leku_refundowanego );

ALTER TABLE leki_refundowane ADD CONSTRAINT lek_uk UNIQUE ( nazwa );

CREATE TABLE opakowania (
    kod_gtin                VARCHAR2(14 CHAR) CONSTRAINT kod_gtin_nn NOT NULL,
    numer_pozwolenia        VARCHAR2(15 CHAR) CONSTRAINT nr_pozwolenia_nn NOT NULL,
    id_leku_refundowanego   NUMBER(5) CONSTRAINT id_leku_fk_nn NOT NULL,
    wielkosc                NUMBER(4) CONSTRAINT wielkosc_nn NOT NULL,
    cena                    NUMBER(4, 2) CONSTRAINT cena_nn NOT NULL,
    termin_waznosci         DATE CONSTRAINT termin_waznosci_nn NOT NULL,
    podmiot_odpowiedzialny  VARCHAR2(25 CHAR) CONSTRAINT podm_odpowiedzialny_nn NOT NULL,
    opis                    VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE opakowania
    ADD CONSTRAINT check_positive_wielkosc
    CHECK ( wielkosc > 0 );  

COMMENT ON TABLE opakowania IS
    'Opakowanie, w ktorym znajduje sie konkretny lek. Opakowanie tego samego leku moze miec wiele wariantow (np.: inna data waznosci, inna wielkosc opakowania).';

COMMENT ON COLUMN opakowania.kod_gtin IS
    'Jest cyfrowa reprezentacja kodu kreskowego EAN. Pozwala jednoznacznie zidentyfikowac wariant opakowania leku. Moze zawierac 12, 13, 14 lub 8 cyfr. Zgodnie z zasadami kazdy produkt powinien miec przypisany unikalny numer GTIN.';

COMMENT ON COLUMN opakowania.numer_pozwolenia IS
    'Numer pozwolenia na dopuszczenie leku do obrotu.';

COMMENT ON COLUMN opakowania.wielkosc IS
    'Wielkosc opakowania uwzgledniajaca postac leku. Notowana jest jako masa, objetosc lub liczba jednostek dawkowania produktu leczniczego. Masa lub objetosc podawane sa w ogolnie przyjetych dla produktow leczniczych jednostkach (np.: mg, g, ml).';

COMMENT ON COLUMN opakowania.cena IS
    'Cena za opakowanie leku wyrazana w PLN.';

COMMENT ON COLUMN opakowania.podmiot_odpowiedzialny IS
    'Nazwa podmiotu odpowiedzialnego konkretnego opakowania leku.';

CREATE INDEX opak_lek_fk_idx ON
    opakowania (
        id_leku_refundowanego
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON opakowania TO bd2c008_app;

ALTER TABLE opakowania ADD CONSTRAINT opak_pk PRIMARY KEY ( kod_gtin );

ALTER TABLE opakowania ADD CONSTRAINT opak_uk UNIQUE ( numer_pozwolenia );

CREATE TABLE pacjenci (
    id_pacjenta     NUMBER(5) CONSTRAINT id_pacjenta_nn NOT NULL,
    imie            VARCHAR2(20 CHAR) CONSTRAINT imie_pacjenta_nn NOT NULL,
    nazwisko        VARCHAR2(25 CHAR) CONSTRAINT nazwisko_pacjenta_nn NOT NULL,
    data_urodzenia  DATE CONSTRAINT data_urodzenia_nn NOT NULL,
    imie_2          VARCHAR2(20 CHAR),
    pesel           CHAR(11 CHAR),
    numer_telefonu  VARCHAR2(16 CHAR),
    plec            CHAR(1 CHAR),
    uwagi           VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE pacjenci
    ADD CONSTRAINT check_valid_plec
    CHECK ( plec IN ( 'I', 'K', 'M' ) );

COMMENT ON TABLE pacjenci IS
    'Pacjent, ktory moze miec wypisana recepte.';

COMMENT ON COLUMN pacjenci.numer_telefonu IS
    'Numer telefonu pacjenta. Zastosowalem typ danych znakowych o zmiennej dlugosci, poniewaz najkrotsze numery telefonow na Swiecie maja dlugosc 4, natomiast najdluzsze 12. Ponadto uwzgledniajac prefix skladajacy sie ze znaku "+" oraz kodu krajowego, najdluzszy numer telefonu zawierac moze 16 znakow.';

COMMENT ON COLUMN pacjenci.plec IS
    'Plec przedstawiana za pomoca pojedynczego znaku. ''K'' - Kobieta, ''M'' - Mezczyzna, ''I'' - Inna.';

GRANT SELECT, INSERT, UPDATE, DELETE ON pacjenci TO bd2c008_app;

ALTER TABLE pacjenci ADD CONSTRAINT pacj_pk PRIMARY KEY ( id_pacjenta );

ALTER TABLE pacjenci ADD CONSTRAINT pacj_pesel_uk UNIQUE ( pesel );

ALTER TABLE pacjenci
    ADD CONSTRAINT pacj_uk UNIQUE ( imie,
                                    nazwisko,
                                    data_urodzenia,
                                    imie_2 );

ALTER TABLE pacjenci ADD CONSTRAINT pacj_nr_tel_uk UNIQUE ( numer_telefonu );

CREATE TABLE recepty (
    numer_recepty     NUMBER(5) CONSTRAINT nr_recepty_nn NOT NULL,
    id_pacjenta       NUMBER(5) CONSTRAINT id_pacjenta_fk_nn NOT NULL,
    id_lekarza        NUMBER(5) CONSTRAINT id_lekarza_fk_nn NOT NULL,
    data_wystawienia  DATE DEFAULT sysdate CONSTRAINT data_wystawienia_nn NOT NULL,
    uwagi             VARCHAR2(4000 CHAR)
)
LOGGING;

COMMENT ON TABLE recepty IS
    'Recepta, ktora musi byc wypisana przez lekarza dla pacjenta.';

COMMENT ON COLUMN recepty.data_wystawienia IS
    'Data wystawienia recepty przez lekarza. Domyslna wartosc to obecna data.';

CREATE INDEX rec_pacj_fk_idx ON
    recepty (
        id_pacjenta
    ASC )
        LOGGING;

CREATE INDEX rec_lekarz_fk_idx ON
    recepty (
        id_lekarza
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON recepty TO bd2c008_app;

ALTER TABLE recepty ADD CONSTRAINT rec_pk PRIMARY KEY ( numer_recepty );

CREATE TABLE sprzedaze (
    id_sprzedazy      NUMBER(5) CONSTRAINT id_sprzedazy_nn NOT NULL,
    kod_gtin          VARCHAR2(14 CHAR) CONSTRAINT kod_gtin_fk_nn NOT NULL,
    numer_recepty     NUMBER(5) CONSTRAINT nr_recepty_fk_nn NOT NULL,
    ilosc             NUMBER(3) CONSTRAINT ilosc_nn NOT NULL,
    odplatnosc        NUMBER(3) CONSTRAINT odplatnosc_nn NOT NULL,
    data_realizacji   DATE DEFAULT sysdate CONSTRAINT data_realizacji_nn NOT NULL,
    metoda_platnosci  VARCHAR2(15 CHAR),
    uwagi             VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE sprzedaze
    ADD CONSTRAINT check_valid_metoda_platnosci
    CHECK ( metoda_platnosci IN ( 'blik', 'gotowka', 'karta' ) );

ALTER TABLE sprzedaze
    ADD CONSTRAINT check_positive_ilosc
    CHECK ( ilosc > 0 );
    
ALTER TABLE sprzedaze
    ADD CONSTRAINT check_valid_odplatnosc
    CHECK ( odplatnosc BETWEEN 0 AND 100 );

COMMENT ON TABLE sprzedaze IS
    'Kazda sprzedaz konkretnego wariantu leku refundowanego w okreslonej ilosci. Jako ze w schemacie uwzglednione sa tylko leki refundowane, aby lek mogl byc sprzedany, musi byc wczesniej przepisany pacjentowi na recepcie.';

COMMENT ON COLUMN sprzedaze.ilosc IS
    'Ilosc kupionych opakowan danego leku.';

COMMENT ON COLUMN sprzedaze.odplatnosc IS
    'Odplatnosc (czesc ceny jaka pacjent musi zaplacic za lek) wyrazana w procentach.';

COMMENT ON COLUMN sprzedaze.data_realizacji IS
    'Data realizacji sprzedazy konkretnej ilosci leku. Domyslna wartosc to obecna data.';

COMMENT ON COLUMN sprzedaze.metoda_platnosci IS
    'Metoda platnosci za lek. Mozliwe metody platnosci: ''blik'', ''gotowka'', ''karta''.';

CREATE INDEX sprzedaz_opak_fk_idx ON
    sprzedaze (
        kod_gtin
    ASC )
        LOGGING;

CREATE INDEX sprzedaz_rec_fk_idx ON
    sprzedaze (
        numer_recepty
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON sprzedaze TO bd2c008_app;

ALTER TABLE sprzedaze ADD CONSTRAINT sprzedaz_pk PRIMARY KEY ( id_sprzedazy );

ALTER TABLE opakowania
    ADD CONSTRAINT opak_lek_fk FOREIGN KEY ( id_leku_refundowanego )
        REFERENCES leki_refundowane ( id_leku_refundowanego )
    DEFERRABLE;

ALTER TABLE recepty
    ADD CONSTRAINT rec_lekarz_fk FOREIGN KEY ( id_lekarza )
        REFERENCES lekarze ( id_lekarza )
    DEFERRABLE;

ALTER TABLE recepty
    ADD CONSTRAINT rec_pacj_fk FOREIGN KEY ( id_pacjenta )
        REFERENCES pacjenci ( id_pacjenta )
    DEFERRABLE;

ALTER TABLE sprzedaze
    ADD CONSTRAINT sprzedaz_opak_fk FOREIGN KEY ( kod_gtin )
        REFERENCES opakowania ( kod_gtin )
    DEFERRABLE;

ALTER TABLE sprzedaze
    ADD CONSTRAINT sprzedaz_rec_fk FOREIGN KEY ( numer_recepty )
        REFERENCES recepty ( numer_recepty )
    DEFERRABLE;

CREATE OR REPLACE TRIGGER fkntm_opakowania BEFORE
/* Zapewnia nietransferowalnosc klucza obcego poprzez
nie pozwalanie na modyfikacje jego wartosci */
    UPDATE OF id_leku_refundowanego 
    ON opakowania FOR EACH ROW
    WHEN (new.id_leku_refundowanego <> old.id_leku_refundowanego)
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table OPAKOWANIA is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_recepty BEFORE
/* Zapewnia nietransferowalnosc klucza obcego poprzez
nie pozwalanie na modyfikacje jego wartosci */
    UPDATE OF id_lekarza, id_pacjenta 
    ON recepty FOR EACH ROW
    WHEN (new.id_lekarza <> old.id_lekarza or new.id_pacjenta <> old.id_pacjenta)
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table RECEPTY is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_sprzedaze BEFORE
/* Zapewnia nietransferowalnosc klucza obcego poprzez
nie pozwalanie na modyfikacje jego wartosci */
    UPDATE OF numer_recepty, kod_gtin 
    ON sprzedaze FOR EACH ROW
    WHEN (new.numer_recepty <> old.numer_recepty or new.kod_gtin <> old.kod_gtin)
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table SPRZEDAZE is violated');
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             5
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
